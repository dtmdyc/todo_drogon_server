/**
 *
 *  RestfulMeetingContentJournalsCtrl.cc
 *  This file is generated by drogon_ctl
 *
 */

#include "RestfulMeetingContentJournalsCtrl.h"
#include <string>




/**
* Uncomment the following methods to customize for business logic.
*/
/*
void RestfulMeetingContentJournalsCtrl::getOne(const HttpRequestPtr &req,
                                               std::function<void(const HttpResponsePtr &)> &&callback,
                                               MeetingContentJournals::PrimaryKeyType &&id)
{
    RestfulMeetingContentJournalsCtrlBase::getOne(req, callback, id);
}


void RestfulMeetingContentJournalsCtrl::updateOne(const HttpRequestPtr &req,
                                                  std::function<void(const HttpResponsePtr &)> &&callback,
                                                  MeetingContentJournals::PrimaryKeyType &&id)
{
    RestfulMeetingContentJournalsCtrlBase::updateOne(req, callback, id);
}


void RestfulMeetingContentJournalsCtrl::deleteOne(const HttpRequestPtr &req,
                                                  std::function<void(const HttpResponsePtr &)> &&callback,
                                                  MeetingContentJournals::PrimaryKeyType &&id)
{
    RestfulMeetingContentJournalsCtrlBase::deleteOne(req, callback, id);
}

void RestfulMeetingContentJournalsCtrl::get(const HttpRequestPtr &req,
                                            std::function<void(const HttpResponsePtr &)> &&callback)
{
    RestfulMeetingContentJournalsCtrlBase::get(req, callback);
}

void RestfulMeetingContentJournalsCtrl::create(const HttpRequestPtr &req,
                                               std::function<void(const HttpResponsePtr &)> &&callback)
{
    RestfulMeetingContentJournalsCtrlBase::create(req, callback);
}

*/
