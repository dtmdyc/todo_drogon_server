/**
 *
 *  RestfulMeetingParticipantsCtrl.cc
 *  This file is generated by drogon_ctl
 *
 */

#include "RestfulMeetingParticipantsCtrl.h"
#include <string>




/**
* Uncomment the following methods to customize for business logic.
*/
/*
void RestfulMeetingParticipantsCtrl::getOne(const HttpRequestPtr &req,
                                            std::function<void(const HttpResponsePtr &)> &&callback,
                                            MeetingParticipants::PrimaryKeyType &&id)
{
    RestfulMeetingParticipantsCtrlBase::getOne(req, callback, id);
}


void RestfulMeetingParticipantsCtrl::updateOne(const HttpRequestPtr &req,
                                               std::function<void(const HttpResponsePtr &)> &&callback,
                                               MeetingParticipants::PrimaryKeyType &&id)
{
    RestfulMeetingParticipantsCtrlBase::updateOne(req, callback, id);
}


void RestfulMeetingParticipantsCtrl::deleteOne(const HttpRequestPtr &req,
                                               std::function<void(const HttpResponsePtr &)> &&callback,
                                               MeetingParticipants::PrimaryKeyType &&id)
{
    RestfulMeetingParticipantsCtrlBase::deleteOne(req, callback, id);
}

void RestfulMeetingParticipantsCtrl::get(const HttpRequestPtr &req,
                                         std::function<void(const HttpResponsePtr &)> &&callback)
{
    RestfulMeetingParticipantsCtrlBase::get(req, callback);
}

void RestfulMeetingParticipantsCtrl::create(const HttpRequestPtr &req,
                                            std::function<void(const HttpResponsePtr &)> &&callback)
{
    RestfulMeetingParticipantsCtrlBase::create(req, callback);
}

*/
