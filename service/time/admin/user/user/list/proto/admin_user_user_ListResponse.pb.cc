// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: time/admin/user/user/list/proto/admin_user_user_ListResponse.proto

#include "time/admin/user/user/list/proto/admin_user_user_ListResponse.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace timeservice {
class UserListResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UserListResponse> _instance;
} _UserListResponse_default_instance_;
}  // namespace timeservice
static void InitDefaultsscc_info_UserListResponse_time_2fadmin_2fuser_2fuser_2flist_2fproto_2fadmin_5fuser_5fuser_5fListResponse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::timeservice::_UserListResponse_default_instance_;
    new (ptr) ::timeservice::UserListResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::timeservice::UserListResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UserListResponse_time_2fadmin_2fuser_2fuser_2flist_2fproto_2fadmin_5fuser_5fuser_5fListResponse_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UserListResponse_time_2fadmin_2fuser_2fuser_2flist_2fproto_2fadmin_5fuser_5fuser_5fListResponse_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_time_2fadmin_2fuser_2fuser_2flist_2fproto_2fadmin_5fuser_5fuser_5fListResponse_2eproto[1];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_time_2fadmin_2fuser_2fuser_2flist_2fproto_2fadmin_5fuser_5fuser_5fListResponse_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_time_2fadmin_2fuser_2fuser_2flist_2fproto_2fadmin_5fuser_5fuser_5fListResponse_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_time_2fadmin_2fuser_2fuser_2flist_2fproto_2fadmin_5fuser_5fuser_5fListResponse_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::timeservice::UserListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::timeservice::UserListResponse, status_),
  PROTOBUF_FIELD_OFFSET(::timeservice::UserListResponse, error_msg_),
  PROTOBUF_FIELD_OFFSET(::timeservice::UserListResponse, json_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::timeservice::UserListResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::timeservice::_UserListResponse_default_instance_),
};

const char descriptor_table_protodef_time_2fadmin_2fuser_2fuser_2flist_2fproto_2fadmin_5fuser_5fuser_5fListResponse_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\nBtime/admin/user/user/list/proto/admin_"
  "user_user_ListResponse.proto\022\013timeservic"
  "e\"\227\001\n\020UserListResponse\0229\n\006status\030\001 \001(\0162)"
  ".timeservice.UserListResponse.ErrorStatu"
  "s\022\021\n\terror_msg\030\002 \001(\t\022\014\n\004json\030\003 \001(\t\"\'\n\013Er"
  "rorStatus\022\006\n\002OK\020\000\022\020\n\014UNAUTHORISED\020\001b\006pro"
  "to3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_time_2fadmin_2fuser_2fuser_2flist_2fproto_2fadmin_5fuser_5fuser_5fListResponse_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_time_2fadmin_2fuser_2fuser_2flist_2fproto_2fadmin_5fuser_5fuser_5fListResponse_2eproto_sccs[1] = {
  &scc_info_UserListResponse_time_2fadmin_2fuser_2fuser_2flist_2fproto_2fadmin_5fuser_5fuser_5fListResponse_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_time_2fadmin_2fuser_2fuser_2flist_2fproto_2fadmin_5fuser_5fuser_5fListResponse_2eproto_once;
static bool descriptor_table_time_2fadmin_2fuser_2fuser_2flist_2fproto_2fadmin_5fuser_5fuser_5fListResponse_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_time_2fadmin_2fuser_2fuser_2flist_2fproto_2fadmin_5fuser_5fuser_5fListResponse_2eproto = {
  &descriptor_table_time_2fadmin_2fuser_2fuser_2flist_2fproto_2fadmin_5fuser_5fuser_5fListResponse_2eproto_initialized, descriptor_table_protodef_time_2fadmin_2fuser_2fuser_2flist_2fproto_2fadmin_5fuser_5fuser_5fListResponse_2eproto, "time/admin/user/user/list/proto/admin_user_user_ListResponse.proto", 243,
  &descriptor_table_time_2fadmin_2fuser_2fuser_2flist_2fproto_2fadmin_5fuser_5fuser_5fListResponse_2eproto_once, descriptor_table_time_2fadmin_2fuser_2fuser_2flist_2fproto_2fadmin_5fuser_5fuser_5fListResponse_2eproto_sccs, descriptor_table_time_2fadmin_2fuser_2fuser_2flist_2fproto_2fadmin_5fuser_5fuser_5fListResponse_2eproto_deps, 1, 0,
  schemas, file_default_instances, TableStruct_time_2fadmin_2fuser_2fuser_2flist_2fproto_2fadmin_5fuser_5fuser_5fListResponse_2eproto::offsets,
  file_level_metadata_time_2fadmin_2fuser_2fuser_2flist_2fproto_2fadmin_5fuser_5fuser_5fListResponse_2eproto, 1, file_level_enum_descriptors_time_2fadmin_2fuser_2fuser_2flist_2fproto_2fadmin_5fuser_5fuser_5fListResponse_2eproto, file_level_service_descriptors_time_2fadmin_2fuser_2fuser_2flist_2fproto_2fadmin_5fuser_5fuser_5fListResponse_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_time_2fadmin_2fuser_2fuser_2flist_2fproto_2fadmin_5fuser_5fuser_5fListResponse_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_time_2fadmin_2fuser_2fuser_2flist_2fproto_2fadmin_5fuser_5fuser_5fListResponse_2eproto), true);
namespace timeservice {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* UserListResponse_ErrorStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_time_2fadmin_2fuser_2fuser_2flist_2fproto_2fadmin_5fuser_5fuser_5fListResponse_2eproto);
  return file_level_enum_descriptors_time_2fadmin_2fuser_2fuser_2flist_2fproto_2fadmin_5fuser_5fuser_5fListResponse_2eproto[0];
}
bool UserListResponse_ErrorStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr UserListResponse_ErrorStatus UserListResponse::OK;
constexpr UserListResponse_ErrorStatus UserListResponse::UNAUTHORISED;
constexpr UserListResponse_ErrorStatus UserListResponse::ErrorStatus_MIN;
constexpr UserListResponse_ErrorStatus UserListResponse::ErrorStatus_MAX;
constexpr int UserListResponse::ErrorStatus_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void UserListResponse::InitAsDefaultInstance() {
}
class UserListResponse::_Internal {
 public:
};

UserListResponse::UserListResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:timeservice.UserListResponse)
}
UserListResponse::UserListResponse(const UserListResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_error_msg().empty()) {
    error_msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.error_msg_);
  }
  json_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_json().empty()) {
    json_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.json_);
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:timeservice.UserListResponse)
}

void UserListResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UserListResponse_time_2fadmin_2fuser_2fuser_2flist_2fproto_2fadmin_5fuser_5fuser_5fListResponse_2eproto.base);
  error_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  json_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
}

UserListResponse::~UserListResponse() {
  // @@protoc_insertion_point(destructor:timeservice.UserListResponse)
  SharedDtor();
}

void UserListResponse::SharedDtor() {
  error_msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  json_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UserListResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UserListResponse& UserListResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UserListResponse_time_2fadmin_2fuser_2fuser_2flist_2fproto_2fadmin_5fuser_5fuser_5fListResponse_2eproto.base);
  return *internal_default_instance();
}


void UserListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:timeservice.UserListResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_msg_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  json_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  status_ = 0;
  _internal_metadata_.Clear();
}

const char* UserListResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .timeservice.UserListResponse.ErrorStatus status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::timeservice::UserListResponse_ErrorStatus>(val));
        } else goto handle_unusual;
        continue;
      // string error_msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_error_msg(), ptr, ctx, "timeservice.UserListResponse.error_msg");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string json = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_json(), ptr, ctx, "timeservice.UserListResponse.json");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UserListResponse::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:timeservice.UserListResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .timeservice.UserListResponse.ErrorStatus status = 1;
  if (this->status() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  // string error_msg = 2;
  if (this->error_msg().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_msg().data(), static_cast<int>(this->_internal_error_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "timeservice.UserListResponse.error_msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error_msg(), target);
  }

  // string json = 3;
  if (this->json().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_json().data(), static_cast<int>(this->_internal_json().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "timeservice.UserListResponse.json");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_json(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:timeservice.UserListResponse)
  return target;
}

size_t UserListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:timeservice.UserListResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_msg = 2;
  if (this->error_msg().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_msg());
  }

  // string json = 3;
  if (this->json().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_json());
  }

  // .timeservice.UserListResponse.ErrorStatus status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserListResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:timeservice.UserListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UserListResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UserListResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:timeservice.UserListResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:timeservice.UserListResponse)
    MergeFrom(*source);
  }
}

void UserListResponse::MergeFrom(const UserListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:timeservice.UserListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_msg().size() > 0) {

    error_msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.error_msg_);
  }
  if (from.json().size() > 0) {

    json_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.json_);
  }
  if (from.status() != 0) {
    _internal_set_status(from._internal_status());
  }
}

void UserListResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:timeservice.UserListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserListResponse::CopyFrom(const UserListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:timeservice.UserListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserListResponse::IsInitialized() const {
  return true;
}

void UserListResponse::InternalSwap(UserListResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  error_msg_.Swap(&other->error_msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  json_.Swap(&other->json_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UserListResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace timeservice
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::timeservice::UserListResponse* Arena::CreateMaybeMessage< ::timeservice::UserListResponse >(Arena* arena) {
  return Arena::CreateInternal< ::timeservice::UserListResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
