/**
 *
 *  RestfulLdapGroupsSynchronizedGroupsCtrl.cc
 *  This file is generated by drogon_ctl
 *
 */

#include "RestfulLdapGroupsSynchronizedGroupsCtrl.h"
#include <string>




/**
* Uncomment the following methods to customize for business logic.
*/
/*
void RestfulLdapGroupsSynchronizedGroupsCtrl::getOne(const HttpRequestPtr &req,
                                                     std::function<void(const HttpResponsePtr &)> &&callback,
                                                     LdapGroupsSynchronizedGroups::PrimaryKeyType &&id)
{
    RestfulLdapGroupsSynchronizedGroupsCtrlBase::getOne(req, callback, id);
}


void RestfulLdapGroupsSynchronizedGroupsCtrl::updateOne(const HttpRequestPtr &req,
                                                        std::function<void(const HttpResponsePtr &)> &&callback,
                                                        LdapGroupsSynchronizedGroups::PrimaryKeyType &&id)
{
    RestfulLdapGroupsSynchronizedGroupsCtrlBase::updateOne(req, callback, id);
}


void RestfulLdapGroupsSynchronizedGroupsCtrl::deleteOne(const HttpRequestPtr &req,
                                                        std::function<void(const HttpResponsePtr &)> &&callback,
                                                        LdapGroupsSynchronizedGroups::PrimaryKeyType &&id)
{
    RestfulLdapGroupsSynchronizedGroupsCtrlBase::deleteOne(req, callback, id);
}

void RestfulLdapGroupsSynchronizedGroupsCtrl::get(const HttpRequestPtr &req,
                                                  std::function<void(const HttpResponsePtr &)> &&callback)
{
    RestfulLdapGroupsSynchronizedGroupsCtrlBase::get(req, callback);
}

void RestfulLdapGroupsSynchronizedGroupsCtrl::create(const HttpRequestPtr &req,
                                                     std::function<void(const HttpResponsePtr &)> &&callback)
{
    RestfulLdapGroupsSynchronizedGroupsCtrlBase::create(req, callback);
}

*/
