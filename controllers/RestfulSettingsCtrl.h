/**
 *
 *  RestfulSettingsCtrl.h
 *  This file is generated by drogon_ctl
 *
 */

#pragma once

#include <drogon/HttpController.h>
#include "RestfulSettingsCtrlBase.h"

#include "Settings.h"
using namespace drogon;

using namespace drogon_model::openproject6;

/**
 * @brief this class is created by the drogon_ctl command.
 * this class is a restful API controller for reading and writing the settings table.
 */

class RestfulSettingsCtrl: public drogon::HttpController<RestfulSettingsCtrl>, public RestfulSettingsCtrlBase
{
  public:
    METHOD_LIST_BEGIN
    ADD_METHOD_TO(RestfulSettingsCtrl::getOne,"/settings/{1}",Get,Options);
    ADD_METHOD_TO(RestfulSettingsCtrl::updateOne,"/settings/{1}",Put,Options);
    ADD_METHOD_TO(RestfulSettingsCtrl::deleteOne,"/settings/{1}",Delete,Options);
    ADD_METHOD_TO(RestfulSettingsCtrl::get,"/settings",Get,Options);
    ADD_METHOD_TO(RestfulSettingsCtrl::create,"/settings",Post,Options);
    //ADD_METHOD_TO(RestfulSettingsCtrl::update,"/settings",Put,Options);
    METHOD_LIST_END
    
    /**
     * Uncomment the following methods to customize for business logic.
     */
     /*
    void getOne(const HttpRequestPtr &req,
                std::function<void(const HttpResponsePtr &)> &&callback,
                Settings::PrimaryKeyType &&id);
    void updateOne(const HttpRequestPtr &req,
                   std::function<void(const HttpResponsePtr &)> &&callback,
                   Settings::PrimaryKeyType &&id);
    void deleteOne(const HttpRequestPtr &req,
                   std::function<void(const HttpResponsePtr &)> &&callback,
                   Settings::PrimaryKeyType &&id);
    void get(const HttpRequestPtr &req,
             std::function<void(const HttpResponsePtr &)> &&callback);
    void create(const HttpRequestPtr &req,
                std::function<void(const HttpResponsePtr &)> &&callback);
    */
};
